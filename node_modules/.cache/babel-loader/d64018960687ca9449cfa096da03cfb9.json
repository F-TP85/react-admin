{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n// 封装axios\nimport axios from 'axios';\nexport default async function axios_(url, params = {}, methods = 'get') {\n  //请求拦截\n  // axios.interceptors.request.use( (config) => {return config;},  (error) => {\n  //     console.log(error)\n  //     return Promise.reject(error);\n  // });\n  //响应拦截\n  axios.interceptors.response.use(res => res, err => {\n    if (err && err.response && err.response.status !== 200) {\n      _message.error(err.response.status + '' + err.response.statusText);\n    }\n\n    return err;\n  });\n\n  if (methods === 'get') {\n    return await axios[methods](url, {\n      params\n    });\n  } else {\n    return await axios[methods](url, params);\n  }\n}","map":{"version":3,"sources":["D:/Visual Studio Code/B站学习/react/project/react-admin/src/api/ajax.js"],"names":["axios","axios_","url","params","methods","interceptors","response","use","res","err","status","error","statusText"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,eAAeC,MAAf,CAAsBC,GAAtB,EAA0BC,MAAM,GAAC,EAAjC,EAAoCC,OAAO,GAAC,KAA5C,EAAmD;AAC9D;AACA;AACA;AACA;AACA;AAEA;AACAJ,EAAAA,KAAK,CAACK,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACIC,GAAG,IAAIA,GADX,EAEIC,GAAG,IAAI;AAEP,QAAGA,GAAG,IAAEA,GAAG,CAACH,QAAT,IAAmBG,GAAG,CAACH,QAAJ,CAAaI,MAAb,KAAwB,GAA9C,EAAkD;AAC9C,eAAQC,KAAR,CAAcF,GAAG,CAACH,QAAJ,CAAaI,MAAb,GAAsB,EAAtB,GAA2BD,GAAG,CAACH,QAAJ,CAAaM,UAAtD;AACH;;AACD,WAAOH,GAAP;AACH,GARD;;AAUA,MAAGL,OAAO,KAAK,KAAf,EAAqB;AACjB,WAAO,MAAMJ,KAAK,CAACI,OAAD,CAAL,CAAeF,GAAf,EAAmB;AAACC,MAAAA;AAAD,KAAnB,CAAb;AACH,GAFD,MAEO;AACH,WAAO,MAAMH,KAAK,CAACI,OAAD,CAAL,CAAeF,GAAf,EAAmBC,MAAnB,CAAb;AACH;AAEJ","sourcesContent":["// 封装axios\r\nimport axios from 'axios'\r\nimport { message } from 'antd';\r\n\r\nexport default async function axios_(url,params={},methods='get') {\r\n    //请求拦截\r\n    // axios.interceptors.request.use( (config) => {return config;},  (error) => {\r\n    //     console.log(error)\r\n    //     return Promise.reject(error);\r\n    // });\r\n\r\n    //响应拦截\r\n    axios.interceptors.response.use(\r\n        res => res,\r\n        err => {\r\n\r\n        if(err&&err.response&&err.response.status !== 200){\r\n            message.error(err.response.status + '' + err.response.statusText);\r\n        }\r\n        return err\r\n    })\r\n    \r\n    if(methods === 'get'){\r\n        return await axios[methods](url,{params})\r\n    } else {\r\n        return await axios[methods](url,params)\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}